name: Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  DOCKER_BUILDKIT: 1
  CR_REPOSITORY: ghcr.io/gridtools/gridtools-base


jobs:
  base:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: >
        docker build
        --progress=plain
        --cache-from $CR_REPOSITORY:base
        --build-arg BUILDKIT_INLINE_CACHE=1
        --tag $CR_REPOSITORY:base
        --build-arg REPOSITORY=$CR_REPOSITORY
        base
    - name: Push
      if: ${{ github.event_name == 'push' && github.repository == 'GridTools/gridtools-docker' }}
      run: >
        echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin &&
        docker push $CR_REPOSITORY &&
        docker logout ghcr.io

  gcc:
    runs-on: ubuntu-latest
    needs: base
    strategy:
      matrix:
        version: [8, 9, 10, 11]
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: >
        docker build
        --progress=plain
        --cache-from $CR_REPOSITORY:base
        --cache-from $CR_REPOSITORY:gcc-${{ matrix.version }}
        --build-arg BUILDKIT_INLINE_CACHE=1
        --tag $CR_REPOSITORY:gcc-${{ matrix.version }}
        --build-arg REPOSITORY=$CR_REPOSITORY
        --build-arg GCC_VERSION=${{ matrix.version }}
        gcc
    - name: Push
      if: ${{ github.event_name == 'push' && github.repository == 'GridTools/gridtools-docker' }}
      run: >
        echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin &&
        docker push $CR_REPOSITORY &&
        docker logout ghcr.io

  clang:
    runs-on: ubuntu-latest
    needs: base
    strategy:
      matrix:
        version: [9, 10, 11, 12]
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: >
        docker build
        --progress=plain
        --cache-from $CR_REPOSITORY:base
        --cache-from $CR_REPOSITORY:clang-${{ matrix.version }}
        --build-arg BUILDKIT_INLINE_CACHE=1
        --tag $CR_REPOSITORY:clang-${{ matrix.version }}
        --build-arg REPOSITORY=$CR_REPOSITORY
        --build-arg CLANG_VERSION=${{ matrix.version }}
        clang
    - name: Push
      if: ${{ github.event_name == 'push' && github.repository == 'GridTools/gridtools-docker' }}
      run: >
        echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin &&
        docker push $CR_REPOSITORY &&
        docker logout ghcr.io

  cuda:
    runs-on: ubuntu-latest
    needs: [gcc, clang]
    strategy:
      matrix:
        base: [gcc-10, clang-10]
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: >
        docker build
        --progress=plain
        --cache-from $CR_REPOSITORY:base
        --cache-from $CR_REPOSITORY:${{ matrix.base }}
        --cache-from $CR_REPOSITORY:${{ matrix.base }}-cuda-11
        --build-arg BUILDKIT_INLINE_CACHE=1
        --tag $CR_REPOSITORY:${{ matrix.base }}-cuda-11
        --build-arg REPOSITORY=$CR_REPOSITORY
        --build-arg BASE=${{ matrix.base }}
        cuda
    - name: Push
      if: ${{ github.event_name == 'push' && github.repository == 'GridTools/gridtools-docker' }}
      run: >
        echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin &&
        docker push $CR_REPOSITORY &&
        docker logout ghcr.io

  hip:
    runs-on: ubuntu-latest
    needs: base
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: >
        docker build
        --progress=plain
        --cache-from $CR_REPOSITORY:base
        --cache-from $CR_REPOSITORY:hip
        --build-arg BUILDKIT_INLINE_CACHE=1
        --tag $CR_REPOSITORY:hip
        --build-arg REPOSITORY=$CR_REPOSITORY
        hip
    - name: Push
      if: ${{ github.event_name == 'push' && github.repository == 'GridTools/gridtools-docker' }}
      run: >
        echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin &&
        docker push $CR_REPOSITORY &&
        docker logout ghcr.io

  hpx:
    runs-on: ubuntu-latest
    needs: gcc
    strategy:
      matrix:
        base: [gcc-11]
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: >
        docker build
        --progress=plain
        --cache-from $CR_REPOSITORY:base
        --cache-from $CR_REPOSITORY:${{ matrix.base }}
        --cache-from $CR_REPOSITORY:${{ matrix.base }}-hpx
        --build-arg BUILDKIT_INLINE_CACHE=1
        --tag $CR_REPOSITORY:${{ matrix.base }}-hpx
        --build-arg REPOSITORY=$CR_REPOSITORY
        --build-arg BASE=${{ matrix.base }}
        --build-arg HPX_TAG=1.5.1
        hpx
    - name: Push
      if: ${{ github.event_name == 'push' && github.repository == 'GridTools/gridtools-docker' }}
      run: >
        echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin &&
        docker push $CR_REPOSITORY &&
        docker logout ghcr.io

  atlas:
    runs-on: ubuntu-latest
    needs: gcc
    strategy:
      matrix:
        base: [gcc-11]
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: >
        docker build
        --progress=plain
        --cache-from $CR_REPOSITORY:base
        --cache-from $CR_REPOSITORY:${{ matrix.base }}
        --cache-from $CR_REPOSITORY:${{ matrix.base }}-atlas
        --build-arg BUILDKIT_INLINE_CACHE=1
        --tag $CR_REPOSITORY:${{ matrix.base }}-atlas
        --build-arg REPOSITORY=$CR_REPOSITORY
        --build-arg BASE=${{ matrix.base }}
        atlas
    - name: Push
      if: ${{ github.event_name == 'push' && github.repository == 'GridTools/gridtools-docker' }}
      run: >
        echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin &&
        docker push $CR_REPOSITORY &&
        docker logout ghcr.io
